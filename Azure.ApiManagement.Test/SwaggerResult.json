{
  "paths": {
    "/pet": {
      "post": {
        "tags": [ "pet" ],
        "operationId": "addPet",
        "consumes": [ "application/json", "application/xml" ],
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": null,
            "type": null,
            "format": null
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "put": {
        "tags": [ "pet" ],
        "operationId": "updatePet",
        "consumes": [ "application/json", "application/xml" ],
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": null,
            "type": null,
            "format": null
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "404": {
            "description": "Pet not found",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "405": {
            "description": "Validation exception",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    },
    "/pet/findByStatus": {
      "get": {
        "tags": [ "pet" ],
        "operationId": "findPetsByStatus",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "schema": null,
            "type": "array",
            "format": null
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "type": "array" },
            "headers": null,
            "examples": null
          },
          "400": {
            "description": "Invalid status value",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    },
    "/pet/findByTags": {
      "get": {
        "tags": [ "pet" ],
        "operationId": "findPetsByTags",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "schema": null,
            "type": "array",
            "format": null
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "type": "array" },
            "headers": null,
            "examples": null
          },
          "400": {
            "description": "Invalid tag value",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": true
      },
      "parameters": null
    },
    "/pet/{petId}": {
      "post": {
        "tags": [ "pet" ],
        "operationId": "updatePetWithForm",
        "consumes": [ "application/x-www-form-urlencoded" ],
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "schema": null,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the pet",
            "required": false,
            "schema": null,
            "type": "string",
            "format": null
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Updated status of the pet",
            "required": false,
            "schema": null,
            "type": "string",
            "format": null
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "get": {
        "tags": [ "pet" ],
        "operationId": "getPetById",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "schema": null,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "404": {
            "description": "Pet not found",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "delete": {
        "tags": [ "pet" ],
        "operationId": "deletePet",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": null,
            "required": false,
            "schema": null,
            "type": "string",
            "format": null
          },
          {
            "name": "petId",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "schema": null,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "404": {
            "description": "Pet not found",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    },
    "/pet/{petId}/uploadImage": {
      "post": {
        "tags": [ "pet" ],
        "operationId": "uploadFile",
        "consumes": [ "multipart/form-data" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to update",
            "required": true,
            "schema": null,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "additionalMetadata",
            "in": "formData",
            "description": "Additional data to pass to server",
            "required": false,
            "schema": null,
            "type": "string",
            "format": null
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": false,
            "schema": null,
            "type": "file",
            "format": null
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    },
    "/store/inventory": {
      "get": {
        "tags": [ "store" ],
        "operationId": "getInventory",
        "consumes": null,
        "produces": [ "application/json" ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "type": "object" },
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    },
    "/store/order": {
      "post": {
        "tags": [ "store" ],
        "operationId": "placeOrder",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "order placed for purchasing the pet",
            "required": true,
            "schema": null,
            "type": null,
            "format": null
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "400": {
            "description": "Invalid Order",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    },
    "/store/order/{orderId}": {
      "get": {
        "tags": [ "store" ],
        "operationId": "getOrderById",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of pet that needs to be fetched",
            "required": true,
            "schema": null,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "404": {
            "description": "Order not found",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "delete": {
        "tags": [ "store" ],
        "operationId": "deleteOrder",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "schema": null,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "404": {
            "description": "Order not found",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    },
    "/user": {
      "post": {
        "tags": [ "user" ],
        "operationId": "createUser",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Created user object",
            "required": true,
            "schema": null,
            "type": null,
            "format": null
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    },
    "/user/createWithArray": {
      "post": {
        "tags": [ "user" ],
        "operationId": "createUsersWithArrayInput",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "List of user object",
            "required": true,
            "schema": { "type": "array" },
            "type": null,
            "format": null
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    },
    "/user/createWithList": {
      "post": {
        "tags": [ "user" ],
        "operationId": "createUsersWithListInput",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "List of user object",
            "required": true,
            "schema": { "type": "array" },
            "type": null,
            "format": null
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    },
    "/user/login": {
      "get": {
        "tags": [ "user" ],
        "operationId": "loginUser",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "schema": null,
            "type": "string",
            "format": null
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "schema": null,
            "type": "string",
            "format": null
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "type": "string" },
            "headers": {
              "description": null,
              "type": null,
              "format": null,
              "items": null,
              "collectionFormat": null,
              "default": null,
              "maximum": 0,
              "exclusiveMaximum": false,
              "minimum": 0,
              "exclusiveMinimum": false,
              "maxLength": 0,
              "minLength": 0,
              "pattern": null,
              "maxItems": 0,
              "minItems": 0,
              "uniqueItems": false,
              "multipleOf": null
            },
            "examples": null
          },
          "400": {
            "description": "Invalid username/password supplied",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    },
    "/user/logout": {
      "get": {
        "tags": [ "user" ],
        "operationId": "logoutUser",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    },
    "/user/{username}": {
      "get": {
        "tags": [ "user" ],
        "operationId": "getUserByName",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": null,
            "type": "string",
            "format": null
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "400": {
            "description": "Invalid username supplied",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "404": {
            "description": "User not found",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "put": {
        "tags": [ "user" ],
        "operationId": "updateUser",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "schema": null,
            "type": "string",
            "format": null
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated user object",
            "required": true,
            "schema": null,
            "type": null,
            "format": null
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "404": {
            "description": "User not found",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "delete": {
        "tags": [ "user" ],
        "operationId": "deleteUser",
        "consumes": null,
        "produces": [ "application/xml", "application/json" ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "schema": null,
            "type": "string",
            "format": null
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied",
            "schema": null,
            "headers": null,
            "examples": null
          },
          "404": {
            "description": "User not found",
            "schema": null,
            "headers": null,
            "examples": null
          }
        },
        "schemes": null,
        "deprecated": false
      },
      "parameters": null
    }
  }
}
